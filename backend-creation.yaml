- name: backend server creation 
  hosts: backend
  become: yes 
  tasks:
  - name: disable nodejs 
    ansible.builtin.commend: dnf module disable nodejs -y

  - name: enable nodejs
    ansible.builtin.commend: dnf module enable nodejs:20 -y

  - name: install nodejs 
    ansible.builtin.dnf:
      name: nodejs
      state: latest
    
  - name: add user 
    ansible.builtin.user:
      name: expense

  - name: create directory 
    ansible.builtin.file:
      path: /app
      state: directory

  - name: Download the application code
    ansible.builtin.get_url:
      url: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
      dest: /tmp/backend.zip

  - name: unarhive code 
    ansible.builtin.unarchive:
      src: /tmp/backend.zip
      dest: /app
  
  - name: download the dependencies.
    ansible.builtin.command: npm install 
    args:
      creates: /app 

  - name: copy the backend file 
    ansible.builtin.copy:
       src: backend.service
       dest: /etc/systemd/system

  - name: reload the demon 
    ansible.builtin.systemd_service:
      daemon_reload: true

  - name: start backend
    ansible.builtin.service:
      name: backend
      state: started
      enabled: yes

  - name: install mysql 
    ansible.builtin.dnf:
       name: mysql 
       state: latest

  - name: load the data 
    community.mysql.mysql_db:
        login_user: root 
        login_password: ExpenseApp@1
        login_hosts: db 
        state: import
        target: /app/schema/backend.sql

  - name: restart the backend
    ansible.builtin.service:
      name: backend
      state: restarted

